server {
    listen 80;
    server_name _;

    # Gdzie leży aplikacja
    root /usr/share/nginx/html;
    index index.html;

    # Gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    # UWAGA: usunięte 'must-revalidate' (niedozwolone dla gzip_proxied)
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain text/css text/xml
        application/javascript application/json application/xml
        image/svg+xml;

    # Nagłówki bezpieczeństwa (globalnie)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # SPA: serwuj index.html dla nieznanych ścieżek, HTML bez cache
    location / {
        try_files $uri $uri/ /index.html;

        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
        add_header Pragma "no-cache" always;
    }

    # Statyczne assety (hashowane) - długi cache
    location ~* \.(?:js|css|woff2?|ttf|otf|eot|svg|png|jpe?g|gif|webp|ico)$ {
        access_log off;
        try_files $uri =404;

        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable" always;
    }

    # Proxy do API (jeśli używasz /api/*)
    location /api/ {
        proxy_pass http://pension-api:8080/;  # stripuje /api/ dzięki końcowemu /
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS (dev)
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;

        # Preflight
        if ($request_method = OPTIONS) {
            return 204;
        }
    }

    # Healthcheck
    location = /health {
        access_log off;
        add_header Content-Type "text/plain";
        return 200 "healthy\n";
    }
}
